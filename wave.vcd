$date
	Mon Oct 14 23:36:51 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 1 ! z $end
$var reg 1 " clk $end
$var reg 2 # x [1:2] $end
$scope module bcc $end
$var wire 1 " clk $end
$var wire 2 $ x [1:2] $end
$var wire 1 ! z $end
$var wire 2 % sig_reg [1:2] $end
$var wire 2 & reg_om [1:2] $end
$scope module om $end
$var wire 2 ' x [1:2] $end
$var wire 1 ! z $end
$var wire 2 ( st [1:2] $end
$upscope $end
$scope module r01 $end
$var wire 1 " clk $end
$var wire 1 ) enable $end
$var wire 2 * inreg [1:2] $end
$var reg 2 + outreg [1:2] $end
$upscope $end
$scope module sig $end
$var wire 2 , st [1:2] $end
$var wire 2 - x [1:2] $end
$var wire 2 . newSt [1:2] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 .
b0 -
b0 ,
b0 +
b0 *
1)
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
0"
0!
$end
#1
b1 %
b1 *
b1 .
b1 #
b1 $
b1 '
b1 -
#3
b1 &
b1 (
b1 +
b1 ,
1"
#4
b11 %
b11 *
b11 .
0"
b11 #
b11 $
b11 '
b11 -
#7
b0 %
b0 *
b0 .
1!
b11 &
b11 (
b11 +
b11 ,
1"
#8
0"
#11
0!
b0 &
b0 (
b0 +
b0 ,
1"
#12
0"
#15
1"
#16
0"
#19
1"
#20
0"
#23
1"
#24
0"
#27
1"
